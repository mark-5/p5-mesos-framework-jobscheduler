#!/usr/bin/env perl
use strict;
use warnings;
use FindBin::libs;
use FindBin qw($Bin);
use Getopt::Long::Descriptive;
use Mesos::JobScheduler;
use Mesos::SchedulerDriver;
use Proc::Daemon;

# PODNAME: start-server

my ($opt, $usage) = describe_options(
    "$0 %o",
    ['daemonize|d', 'run the server in the background'],
    ['listen|l=s',  'the address to listen to http requests on'],
    ['master|m=s',  'the mesos master to use', {required => 1}],
    ['pidfile|p=s', 'the path to the pid file, if running with --daemonize', {default => '/var/run/mesos-jobscheduler.pid'}],
    ['zk|z=s',      'the address of the zookeeper server to use', {required => 1}],
);
my ($host, $port) = split ':', $opt->{listen} // '';
$host ||= '0.0.0.0';
$port ||= 8080;

my $daemon = Proc::Daemon->new(
    pid_file => $opt->{pidfile},
);

$daemon->Init if $opt->{daemonize};

my $scheduler = Mesos::JobScheduler->new(
    http => {
        host => $host || '0.0.0.0',
        port => $port || 8080,
    },
    zk => {
        hosts => $opt->{zk},
    },
);

my $driver = Mesos::SchedulerDriver->new(
    dispatcher => 'AnyEvent',
    framework  => {
        user => '',
        name => 'Mesos::JobScheduler Framework',
    },
    master    => $opt->{master},
    scheduler => $scheduler,
);

$SIG{INT} = sub { exit 0 };
$driver->run;
